package sv.edu.udb.www.ProyectoPOO.entities;
// Generated Nov 17, 2018 9:49:29 AM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;

import org.hibernate.validator.constraints.Range;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Empresas generated by hbm2java
 */
@Entity
@Table(name="empresas"
    ,catalog="bddpoo"
)
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Empresas  implements java.io.Serializable {


     private String codigoEmpresa;
     private Rubros rubros;
     private Usuarios usuarios;
     
     @NotBlank(message="Nombre de la empresa requerido.")
     private String nombreEmpresa;
     
     @NotBlank(message="Nombre del contacto requerido.")
     private String nombreContacto;
     
     @NotBlank(message="Direccion requerida.")
     private String direccion;
     
     @Pattern(regexp = "[7,2][0-9]{3}-[0-9]{4}" ,message="El formato del telefono deber ser 0000-0000 iniciando con 7 o 2.")
     @NotBlank(message="telefono requerido")
     private String telefono;
     
     @Range(min=0,max=60,message="La comision no puede mayor de 60")
     @NotNull(message="Comision requerida")
     private BigDecimal comision;
     
     private Set<Empleado> empleados = new HashSet<Empleado>(0);
     private Set<Ofertas> ofertases = new HashSet<Ofertas>(0);

    public Empresas() {
    }

	
    public Empresas(String codigoEmpresa, Rubros rubros, Usuarios usuarios, String nombreEmpresa, String nombreContacto, String direccion, String telefono, BigDecimal comision) {
        this.codigoEmpresa = codigoEmpresa;
        this.rubros = rubros;
        this.usuarios = usuarios;
        this.nombreEmpresa = nombreEmpresa;
        this.nombreContacto = nombreContacto;
        this.direccion = direccion;
        this.telefono = telefono;
        this.comision = comision;
    }
    public Empresas(String codigoEmpresa, Rubros rubros, Usuarios usuarios, String nombreEmpresa, String nombreContacto, String direccion, String telefono, BigDecimal comision, Set<Empleado> empleados, Set<Ofertas> ofertases) {
       this.codigoEmpresa = codigoEmpresa;
       this.rubros = rubros;
       this.usuarios = usuarios;
       this.nombreEmpresa = nombreEmpresa;
       this.nombreContacto = nombreContacto;
       this.direccion = direccion;
       this.telefono = telefono;
       this.comision = comision;
       this.empleados = empleados;
       this.ofertases = ofertases;
    }
   
     @Id 

    
    @Column(name="CodigoEmpresa", unique=true, nullable=false, length=6)
    public String getCodigoEmpresa() {
        return this.codigoEmpresa;
    }
    
    public void setCodigoEmpresa(String codigoEmpresa) {
        this.codigoEmpresa = codigoEmpresa;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IdRubro", nullable=false)
    public Rubros getRubros() {
        return this.rubros;
    }
    
    public void setRubros(Rubros rubros) {
        this.rubros = rubros;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IdUsuario", nullable=false)
    public Usuarios getUsuarios() {
        return this.usuarios;
    }
    
    public void setUsuarios(Usuarios usuarios) {
        this.usuarios = usuarios;
    }

    
    @Column(name="NombreEmpresa", nullable=false, length=50)
    public String getNombreEmpresa() {
        return this.nombreEmpresa;
    }
    
    public void setNombreEmpresa(String nombreEmpresa) {
        this.nombreEmpresa = nombreEmpresa;
    }

    
    @Column(name="NombreContacto", nullable=false, length=50)
    public String getNombreContacto() {
        return this.nombreContacto;
    }
    
    public void setNombreContacto(String nombreContacto) {
        this.nombreContacto = nombreContacto;
    }

    
    @Column(name="Direccion", nullable=false, length=100)
    public String getDireccion() {
        return this.direccion;
    }
    
    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    
    @Column(name="Telefono", nullable=false, length=9)
    public String getTelefono() {
        return this.telefono;
    }
    
    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    
    @Column(name="Comision", nullable=false, precision=10)
    public BigDecimal getComision() {
        return this.comision;
    }
    
    public void setComision(BigDecimal comision) {
        this.comision = comision;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="empresas")
    public Set<Empleado> getEmpleados() {
        return this.empleados;
    }
    
    public void setEmpleados(Set<Empleado> empleados) {
        this.empleados = empleados;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="empresas")
    public Set<Ofertas> getOfertases() {
        return this.ofertases;
    }
    
    public void setOfertases(Set<Ofertas> ofertases) {
        this.ofertases = ofertases;
    }




}


